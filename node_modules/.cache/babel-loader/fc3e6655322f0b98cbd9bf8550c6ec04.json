{"ast":null,"code":"var _jsxFileName = \"/home/gomes/Trybe/trybe-exercises/Desenv_Front_End/Bloco_16/dia_3/cadastro-de-clientes/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport { getEmail, getPwd } from '../actions';\nimport { connect } from 'react-redux';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  console() {\n    const st = store.getState();\n    const ret = Object.entries(st);\n    let pwd;\n    let mail;\n    ret.forEach(element => {\n      if (['Email'].includes(element[0])) {\n        mail = element[1];\n      } // if( == ''){\n      // console.log('element email vazio') \n      // }\n\n\n      if (['Senha'].includes(element[0])) {\n        pwd = element[1];\n      }\n\n      if (pwd === '' || mail === '') {\n        console.log('algum element vazio');\n      } // if( == ''){\n      // console.log('element senha vazio') \n      // }\n      //   // console.log( element[0].value) \n\n    }); // console.log(ret)\n  }\n\n  // Object.keys(st).map(element => element.Email !=='' ? console.log('preenchido') : console.log('vazio') )\n  // [{},{},{}].groupBy(obj => obj.location)\n  // {\n  // NE: [A, B],\n  // NW: [C, D],\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Preencha os dados para Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"datas-to-login\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: ({\n              target\n            }) => this.props.get_email(target.value),\n            placeholder: \"Digite aqui seu email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"datas-to-login\",\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: ({\n              target\n            }) => this.props.get_pwd(target.value),\n            placeholder: \"Digite aqui sua senha\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => this.console(),\n            children: \"Fazer Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  Email: state.get_Email,\n  Senha: state.get_Pwd\n});\n\nconst mapDispatchToProps = dispatch => ({\n  get_email: get_Email => dispatch(getEmail(get_Email)),\n  get_pwd: get_Pwd => dispatch(getPwd(get_Pwd))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/gomes/Trybe/trybe-exercises/Desenv_Front_End/Bloco_16/dia_3/cadastro-de-clientes/src/components/Login.jsx"],"names":["React","Component","Link","getEmail","getPwd","connect","store","Login","console","st","getState","ret","Object","entries","pwd","mail","forEach","element","includes","log","render","target","props","get_email","value","get_pwd","mapStateToProps","state","Email","get_Email","Senha","get_Pwd","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport { getEmail, getPwd } from '../actions'\nimport { connect } from 'react-redux'\nimport store from '../store'\n\nclass Login extends Component {\n  console() {\n    const st = store.getState()\n    const ret =  Object.entries(st)\n    let pwd;\n    let mail;\n    ret.forEach(element => {\n      if(['Email'].includes(element[0])){\n        mail = element[1]\n      }\n        // if( == ''){\n          // console.log('element email vazio') \n        // }\n    if(['Senha'].includes(element[0])){\n      pwd = element[1]\n    }\n if(pwd === '' || mail ===''){\n          console.log('algum element vazio') \n }\n \n    // if( == ''){\n        // console.log('element senha vazio') \n      // }\n    //   // console.log( element[0].value) \n });\n      // console.log(ret)\n }; \n    // Object.keys(st).map(element => element.Email !=='' ? console.log('preenchido') : console.log('vazio') )\n    \n// [{},{},{}].groupBy(obj => obj.location)\n// {\n  // NE: [A, B],\n  // NW: [C, D],\n// }\n\n  \n  render() {\n    return (\n      <div className=\"background-login\">\n        <div className=\"login\">\n          <fieldset>\n            <legend>Preencha os dados para Login</legend>\n            <legend className=\"datas-to-login\">Email</legend>\n            <input onChange={({target}) => this.props.get_email(target.value)} placeholder=\"Digite aqui seu email\" type=\"text\" />\n            <legend className=\"datas-to-login\">Senha</legend>\n            <input onChange={({target}) => this.props.get_pwd(target.value)} placeholder=\"Digite aqui sua senha\" type=\"password\" />\n            {/* <Link className=\"to-costumer-base\" to=\"/customers\"> */}\n              <a onClick={()=>this.console()} >Fazer Login</a>\n              \n            {/* </Link> */}\n          </fieldset>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  Email: state.get_Email,\n  Senha: state.get_Pwd,\n});\n\nconst mapDispatchToProps = (dispatch) =>({\n get_email:(get_Email) => dispatch(getEmail(get_Email)),\n get_pwd: (get_Pwd) => dispatch(getPwd(get_Pwd)),\n})\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}