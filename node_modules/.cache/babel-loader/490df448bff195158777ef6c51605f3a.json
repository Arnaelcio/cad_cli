{"ast":null,"code":"var _jsxFileName = \"/home/gomes/Trybe/trybe-exercises/Desenv_Front_End/Bloco_16/dia_3/cadastro-de-clientes/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Login.css\"; // import { ,  } from \"react-router-dom\";\n\nimport { getEmail, getPwd } from \"../actions/Login\";\nimport { connect } from \"react-redux\";\nimport store from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  toPass() {\n    const st = store.getState();\n    const ret = Object.entries(st);\n    const res = Object.entries(ret[0][1]); // let pwd;\n    // let mail;\n\n    res.forEach(element => {\n      console.log(element[1]); //   if ([\"Email\"].includes(element[0])) {\n      //     mail = element[1];\n      //   }\n      //   if ([\"Senha\"].includes(element[0])) {\n      //     pwd = element[1];\n      //   }\n      // });\n      // if ([\"\"].includes(pwd, mail)) {\n      //   alert(\"Login não efetuado\");\n      // } else {\n      //   this.props.history.push(\"/customers\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Preencha os dados para Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"datas-to-login\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: ({\n              target\n            }) => this.props.get_email(target.value),\n            placeholder: \"Digite aqui seu email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"datas-to-login\",\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: ({\n              target\n            }) => this.props.get_pwd(target.value),\n            placeholder: \"Digite aqui sua senha\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => this.toPass(),\n            children: \"Fazer Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  Email: state.get_Email,\n  Senha: state.get_Pwd\n});\n\nconst mapDispatchToProps = dispatch => ({\n  get_email: get_Email => dispatch(getEmail(get_Email)),\n  get_pwd: get_Pwd => dispatch(getPwd(get_Pwd))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/gomes/Trybe/trybe-exercises/Desenv_Front_End/Bloco_16/dia_3/cadastro-de-clientes/src/components/Login.jsx"],"names":["React","Component","getEmail","getPwd","connect","store","Login","toPass","st","getState","ret","Object","entries","res","forEach","element","console","log","render","target","props","get_email","value","get_pwd","mapStateToProps","state","Email","get_Email","Senha","get_Pwd","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP,C,CACA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,MAAM,GAAG;AACP,UAAMC,EAAE,GAAGH,KAAK,CAACI,QAAN,EAAX;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeJ,EAAf,CAAZ;AACA,UAAMK,GAAG,GAAEF,MAAM,CAACC,OAAP,CAAeF,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAf,CAAX,CAHO,CAKP;AACA;;AACAG,IAAAA,GAAG,CAACC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAAC,CAAD,CAAnB,EADuB,CAEvB;AACE;AACA;AACA;AACE;AACA;AACA;AACA;AACE;AACA;AACE;AAET,KAdD;AAeD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AACE,YAAA,QAAQ,EAAE,CAAC;AAAEC,cAAAA;AAAF,aAAD,KAAgB,KAAKC,KAAL,CAAWC,SAAX,CAAqBF,MAAM,CAACG,KAA5B,CAD5B;AAEE,YAAA,WAAW,EAAC,uBAFd;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,kBAHF,eAQE;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AACE,YAAA,QAAQ,EAAE,CAAC;AAAEH,cAAAA;AAAF,aAAD,KAAgB,KAAKC,KAAL,CAAWG,OAAX,CAAmBJ,MAAM,CAACG,KAA1B,CAD5B;AAEE,YAAA,WAAW,EAAC,uBAFd;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE;AAAG,YAAA,OAAO,EAAE,MAAM,KAAKf,MAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAhD2B;;AAkD9B,MAAMiB,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,KAAK,EAAED,KAAK,CAACE,SADqB;AAElCC,EAAAA,KAAK,EAAEH,KAAK,CAACI;AAFqB,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,SAAS,EAAGM,SAAD,IAAeI,QAAQ,CAAC7B,QAAQ,CAACyB,SAAD,CAAT,CADM;AAExCJ,EAAAA,OAAO,EAAGM,OAAD,IAAaE,QAAQ,CAAC5B,MAAM,CAAC0B,OAAD,CAAP;AAFU,CAAf,CAA3B;;AAKA,eAAezB,OAAO,CAACoB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CxB,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Login.css\";\n// import { ,  } from \"react-router-dom\";\nimport { getEmail, getPwd } from \"../actions/Login\";\nimport { connect } from \"react-redux\";\nimport store from \"../store\";\n\nclass Login extends Component {\n  toPass() {\n    const st = store.getState();\n    const ret = Object.entries(st);\n    const res =Object.entries(ret[0][1]); \n    \n    // let pwd;\n    // let mail;\n    res.forEach((element) => {\n      console.log(element[1])\n      //   if ([\"Email\"].includes(element[0])) {\n        //     mail = element[1];\n        //   }\n        //   if ([\"Senha\"].includes(element[0])) {\n          //     pwd = element[1];\n          //   }\n          // });\n          // if ([\"\"].includes(pwd, mail)) {\n            //   alert(\"Login não efetuado\");\n            // } else {\n              //   this.props.history.push(\"/customers\");\n              \n    })\n  }\n\n  render() {\n    return (\n      <div className=\"background-login\">\n        <div className=\"login\">\n          <fieldset>\n            <legend>Preencha os dados para Login</legend>\n            <legend className=\"datas-to-login\">Email</legend>\n            <input\n              onChange={({ target }) => this.props.get_email(target.value)}\n              placeholder=\"Digite aqui seu email\"\n              type=\"text\"\n            />\n            <legend className=\"datas-to-login\">Senha</legend>\n            <input\n              onChange={({ target }) => this.props.get_pwd(target.value)}\n              placeholder=\"Digite aqui sua senha\"\n              type=\"password\"\n            />\n            <a onClick={() => this.toPass()}>Fazer Login</a>\n          </fieldset>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  Email: state.get_Email,\n  Senha: state.get_Pwd,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  get_email: (get_Email) => dispatch(getEmail(get_Email)),\n  get_pwd: (get_Pwd) => dispatch(getPwd(get_Pwd)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}